/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.unipampa.gerenciadorconcurso.view.interno;

import br.edu.unipampa.gerenciadorconcurso.model.Concurso;
import br.edu.unipampa.gerenciadorconcurso.model.Registrocronograma;
import br.edu.unipampa.gerenciadorconcurso.service.ConogramaService;
import br.edu.unipampa.gerenciadorconcurso.validator.Campos;
import br.edu.unipampa.gerenciadorconcurso.validator.StatusCadastros;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pedro
 */
public class DefinirCronograma extends javax.swing.JInternalFrame {

    private static final int POSICAO_ATIVIDADE = 0;
    private static final int POSICAO_DATA = 1;
    private static final int POSICAO_HORARIO = 2;
    private static final int POSICAO_LOCAL = 3;

    private Campos tratamentoCampos;
    private StatusCadastros status;
    private final ConogramaService conogramaService;
    private final DefaultTableModel modelo;
    private ArrayList<String[]> listaInicial;
    private ArrayList<String[]> listaFinal;
    private boolean salvou;

    public DefinirCronograma() {
        modelo = new DefaultTableModel();
        conogramaService = new ConogramaService();
        salvou = true;
        initComponents();
        inicializarTabela();
        buscarConogramaCadastrado();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotaoAdicionarLinha = new javax.swing.JButton();
        BotaoConfirmar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaConograma = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        btNovo = new javax.swing.JButton();
        Editar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btDeletar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        BotaoAdicionarLinha.setText("Adicionar Linha");
        BotaoAdicionarLinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAdicionarLinhaActionPerformed(evt);
            }
        });

        BotaoConfirmar.setText("Confirmar");
        BotaoConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoConfirmarActionPerformed(evt);
            }
        });

        TabelaConograma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Atividade", "Data", "Horário", "Local"
            }
        ));
        jScrollPane2.setViewportView(TabelaConograma);

        jToolBar1.setRollover(true);

        btNovo.setText("Novo");
        btNovo.setFocusable(false);
        btNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btNovo);

        Editar.setText("Editar");
        Editar.setFocusable(false);
        Editar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Editar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(Editar);

        btSalvar.setText("Salvar");
        btSalvar.setFocusable(false);
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btSalvar);

        btDeletar.setText("Deletar");
        btDeletar.setFocusable(false);
        btDeletar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btDeletar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarActionPerformed(evt);
            }
        });
        jToolBar1.add(btDeletar);

        jButton1.setText("Buscar");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotaoAdicionarLinha)
                .addGap(18, 18, 18)
                .addComponent(BotaoConfirmar)
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotaoConfirmar)
                    .addComponent(BotaoAdicionarLinha)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoAdicionarLinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAdicionarLinhaActionPerformed

    }//GEN-LAST:event_BotaoAdicionarLinhaActionPerformed

    private void BotaoConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoConfirmarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotaoConfirmarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        if (verificaCompletudeLinha()) {
            if (salvou) {
                modelo.addRow(new Object[4]);
                salvou = false;
            }else{
                JOptionPane.showMessageDialog(null, "Salve a sua alteração Primeiro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Preencha todos os dados do"
                    + " registro de conograma atual, antes de adicionar um novo!");
        }
    }//GEN-LAST:event_btNovoActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (tratamentoCampos.validaObrigatorios()) {

        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Você deseja realmente deletar o registro?") == JOptionPane.OK_OPTION) {

        }
    }//GEN-LAST:event_btDeletarActionPerformed

    /**
     * Monta a estrutura da tabela em que o conograma vai estar.
     */
    private void inicializarTabela() {
        TabelaConograma.setModel(modelo);
        modelo.addColumn("Atividade");
        modelo.addColumn("Data");
        modelo.addColumn("Horário");
        modelo.addColumn("Local");
    }

    private void buscarConogramaCadastrado() {
        String[] vetorConograma;
        ArrayList<Registrocronograma> listaConograma
                = conogramaService.buscarConogramaPorConcurso(Concurso.getInstance());
        //Preeche a tabela com os dados já existentes
        for (Registrocronograma registrocronograma : listaConograma) {
            vetorConograma = new String[4];
            vetorConograma[POSICAO_ATIVIDADE] = registrocronograma.getAtividade();
            vetorConograma[POSICAO_DATA] = "" + registrocronograma.getData();
            vetorConograma[POSICAO_HORARIO] = "" + registrocronograma.getHorario();
            vetorConograma[POSICAO_LOCAL] = registrocronograma.getLocal();
            modelo.addRow(vetorConograma);
        }
    }

    /**
     * Verifica se todas os dados foram preenchidos
     *
     * @return true se todos os dados estiverem preenchidos
     */
    public boolean verificaCompletudeLinha() {
        int numeroLinhas = modelo.getRowCount();
        Vector vetorLinhas;
        vetorLinhas = modelo.getDataVector();
        Object valorCampo;
        //Se a tabela estiver vazia
        if (numeroLinhas != 0) {
            //Percorre uma a última linha, verificando se todos os campos foram preenchidos
            for (int i = 0; i < modelo.getColumnCount(); i++) {
                valorCampo = ((Vector) vetorLinhas.elementAt(numeroLinhas - 1)).elementAt(i);
                if (valorCampo == null) {
                    return false;
                }
            }
        } else {
            return true;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoAdicionarLinha;
    private javax.swing.JButton BotaoConfirmar;
    private javax.swing.JButton Editar;
    private javax.swing.JTable TabelaConograma;
    private javax.swing.JButton btDeletar;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
