//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Configuracao.h"
#include "Principal.h"
#include "Titulos.h"
#include "Escrita.h"
#include "Didatica.h"
#include "DefesaProjeto.h"
#include "Cabecalho.h"
#include "Abertura.h"
#include "Didatica_Candidatos.h"
#include "Resultado.h"
#include "DefesaProjeto_candidatos.h"

//extern vector<tipo_examinador> examinador;
//extern vector<tipo_candidato> candidato;
//extern vector<tipo_ponto> ponto_escrita;
//extern vector<tipo_ponto> ponto_didatica;

//vector<float> notas;
String diretorio_temporario;
int candidatos_inscritos_opcao; // Usado somente na aba "Candidatos Inscritos", como opção "Adiconar"(1) ou "Editar"(2)

//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "cdiroutl"
#pragma resource "*.dfm"
TFormConfiguracao *FormConfiguracao;
//---------------------------------------------------------------------------
__fastcall TFormConfiguracao::TFormConfiguracao(TComponent* Owner)
        : TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TFormConfiguracao::Button3Click(TObject *Sender)
{
        if (Application->MessageBox("Esta configuração irá alterar todos os documentos gerados a partir de agora,\nmas não modifica os anteriores. Deseja continuar?","Atenção",MB_OKCANCEL)==IDOK)
        {

                // --- Examinadores
                // Examinador 0 (presidente)
                examinador[0].nome = Edit1->Text;
                examinador[0].sexo = RadioGroup2->ItemIndex;
                examinador[0].classe = RadioGroup1->ItemIndex;
                //examinador[0].presidente = true;
                String cargo;
                switch (examinador[0].classe)
                {
                case 0: cargo = "Prof. Tit. ";
                        break;
                case 1: cargo = "Prof. Assoc. ";
                        break;
                case 2: cargo = "Prof. Adj. ";
                        break;
                case 3: cargo = "Prof. Assist. ";
                        break;
                case 4: cargo = "Prof. Aux. ";
                        break;
                }
                examinador[0].nome_completo = cargo + examinador[0].nome;

                // Examinador 1
                examinador[1].nome = Edit2->Text;
                examinador[1].sexo = RadioGroup6->ItemIndex;
                examinador[1].classe = RadioGroup5->ItemIndex;
                //examinador[1].presidente = true;
                //String cargo;
                switch (examinador[1].classe)
                {
                case 0: cargo = "Prof. Tit. ";
                        break;
                case 1: cargo = "Prof. Assoc. ";
                        break;
                case 2: cargo = "Prof. Adj. ";
                        break;
                case 3: cargo = "Prof. Assist. ";
                        break;
                case 4: cargo = "Prof. Aux. ";
                        break;
                }
                examinador[1].nome_completo = cargo + examinador[1].nome;

                // Examinador 2
                examinador[2].nome = Edit6->Text;
                examinador[2].sexo = RadioGroup8->ItemIndex;
                examinador[2].classe = RadioGroup7->ItemIndex;
                //examinador[2].presidente = true;
                //String cargo;
                switch (examinador[2].classe)
                {
                case 0: cargo = "Prof. Tit. ";
                        break;
                case 1: cargo = "Prof. Assoc. ";
                        break;
                case 2: cargo = "Prof. Adj. ";
                        break;
                case 3: cargo = "Prof. Assist. ";
                        break;
                case 4: cargo = "Prof. Aux. ";
                        break;
                }
                examinador[2].nome_completo = cargo + examinador[2].nome;

                List_Banca->Items->Clear();
                List_Banca->Items->Add(examinador[0].nome);
                List_Banca->Items->Add(examinador[1].nome);
                List_Banca->Items->Add(examinador[2].nome);

                FormTitulos->ComboBox1->Items = List_Candidatos->Items;
                FormTitulos->ComboBox2->Items = List_Banca->Items;
                //FormTitulos->ComboBox2->Items = List_Banca->Items;
                int nro_cand = List_Candidatos->Items->Count;
                int nro_exam = List_Banca->Items->Count;
                //for (int h=0; h<nro_exam; h++)
                        for (int j=0; j<nro_cand; j++)
                                for (int i=0; i<=63; i++)
                                        candidato[j].nota_titulos[i] = 0;

                // Carrega o nome dos candidatos nos listbox de Escrita.cpp
                //FormEscrita->CheckListBox1->Items = List_Candidatos->Items;
                FormEscrita->ListBox4->Items =  List_Candidatos->Items;
                //FormEscrita->CheckListBox2->Items = List_Candidatos->Items;
                //FormEscrita->ListBox2->Items = List_Candidatos->Items;
                FormEscrita->ListBox3->Items = List_Banca->Items;
                FormDidaticaCandidatos->ListBox1->Items = List_Candidatos->Items;
                FormDidatica->ListBox3->Items = List_Banca->Items;
                FormAbertura->CheckListBox1->Items = List_Candidatos->Items;
                FormDefesaProjeto_candidatos->ListBox1->Items = List_Candidatos->Items;
                FormDefesaProjeto->ListBox3->Items = List_Banca->Items;
                for (int i=0; i<nro_cand; i++)
                {
                        //candidato[i].compareceu_realizacao_prova_escrita = true;
                        //FormEscrita->CheckListBox1->Checked[i] = true;
                        //candidato[i].compareceu_leitura_prova_escrita = true;
                        //FormEscrita->CheckListBox2->Checked[i] = true;
                }

                projeto.diretorio = diretorio_temporario;

                SetCurrentDir(projeto.diretorio);
                String aaa = GetCurrentDir();
                projeto.nome = Edit5->Text;
                Form1->Caption = "Gerenciador de Concursos Públicos - UNIPAMPA - " + projeto.nome + ".gcp";
                projeto.ministerio = LabeledEdit1->Text;
                projeto.universidade = LabeledEdit5->Text;
                projeto.centro = LabeledEdit6->Text;
                projeto.departamento = LabeledEdit8->Text;
                projeto.campus = LabeledEdit7->Text;
                projeto.area = LabeledEdit2->Text;
                projeto.classe = RadioGroup4->ItemIndex;
                projeto.data_inicio = DateTimePicker1->Date;

                

                FormCabecalho->RichEdit1->Lines->Clear();
                FormCabecalho->RichEdit1->Lines->Add(AnsiUpperCase(LabeledEdit1->Text));  // Ministerio
                FormCabecalho->RichEdit1->Lines->Add(AnsiUpperCase(LabeledEdit5->Text));  // Universidade
                FormCabecalho->RichEdit1->Lines->Add(AnsiUpperCase(LabeledEdit6->Text));  // Centro
                FormCabecalho->RichEdit1->Lines->Add("CAMPUS: " + AnsiUpperCase(LabeledEdit7->Text));  // Campus
                FormCabecalho->RichEdit1->Lines->Add(AnsiUpperCase(LabeledEdit8->Text));  // Departamento

                String categoria;
                switch (projeto.classe)
                {
                case 0: categoria = "ADJUNTO";
                        break;
                case 1: categoria = "ASSISTENTE";
                        break;
                case 2: categoria = "AUXILIAR";
                        break;
                default: categoria = "?????";
                        break;
                }
                FormCabecalho->RichEdit1->Lines->Add("CONCURSO PÚBLICO PARA PROFESSOR " + categoria);
                FormCabecalho->RichEdit1->Lines->Add("ÁREA: " + AnsiUpperCase(LabeledEdit2->Text));  // Area

                FormCabecalho->ShowModal();


                Form1->ScrollBox1->Enabled = true;
                Form1->ListView1->Enabled = true;
                Form1->ListView2->Enabled = true;
                Form1->ListView3->Enabled = true;
                Form1->BitBtn1->Enabled = true;
                Form1->BitBtn5->Enabled = true;
                Form1->BitBtn9->Enabled = true;
                Form1->BitBtn3->Enabled = true;
                Form1->BitBtn4->Enabled = true;
                Form1->BitBtn6->Enabled = true;


                FormDidatica->Button1Click(FormAbertura);
                FormDefesaProjeto->Button1Click(FormAbertura);
                FormResultado->Button1Click(FormConfiguracao);
                FormConfiguracao->Close();


        }
}
//---------------------------------------------------------------------------
void __fastcall TFormConfiguracao::Button2Click(TObject *Sender)
{

/*
   candidatos_inscritos_opcao==1 -- Adicionar candidato
   candidatos_inscritos_opcao==2 -- Editar candidato
   outras opcoes -- nada acontece, torna invisivel o Panel1
*/

    // ****** Adicionar candidato
    if (candidatos_inscritos_opcao==1)
    {
        List_Candidatos->Items->Add(Edit3->Text);

        tipo_candidato ex_candidato;

        ex_candidato.nome = Edit3->Text;
        ex_candidato.sexo = RadioGroup3->ItemIndex;
        //ex_candidato.ausente = false;
        //ex_candidato.desistente = false;
        //ex_candidato.aprovado = false;
        ex_candidato.nascimento = DateTimePicker2->Date;


        candidato.push_back(ex_candidato);

        List_Candidatos -> ItemIndex = List_Candidatos->Items->Count - 1;
        List_CandidatosClick(FormConfiguracao);


    }

    // ****** Editar candidato
    if (candidatos_inscritos_opcao==2)
    {

            int i = List_Candidatos->ItemIndex;

        if (i >= 0)
        {
        candidato[i].nome = Edit3->Text;
        candidato[i].sexo = RadioGroup3->ItemIndex;
        candidato[i].nascimento = DateTimePicker2->Date;


        // Atualiza a lista
        List_Candidatos->Items->Clear();
        for (unsigned int j=0; j<candidato.size() ; j++)
        {
                List_Candidatos->Items->Add(candidato[j].nome);
        }
        if (List_Candidatos->Items->Count > 0)
                List_Candidatos->ItemIndex = i;
                List_CandidatosClick(FormConfiguracao);
        }

    }
    HabilitaPanel1(0);
    //Panel1->Enabled = false;
}
//---------------------------------------------------------------------------
void __fastcall TFormConfiguracao::List_BancaClick(TObject *Sender)
{
        /*int i = List_Banca->ItemIndex;

        Edit1->Text = examinador[i].nome;
        Edit2->Text = examinador[i].instituicao;
        RadioGroup1->ItemIndex = examinador[i].classe;
        RadioGroup2->ItemIndex = examinador[i].sexo;
        CheckBox1->Checked = examinador[i].presidente;

        //CheckBox2->Checked = examinador[i].suplente; */
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button5Click(TObject *Sender)
{
/*        int i = List_Banca->ItemIndex;

        if (i >= 0)
        {
        examinador[i].nome = Edit1->Text;
        examinador[i].instituicao = Edit2->Text;
        examinador[i].classe = RadioGroup1->ItemIndex;
        examinador[i].sexo = RadioGroup2->ItemIndex;
        examinador[i].presidente = CheckBox1->Checked;
        //examinador[i].suplente = CheckBox2->Checked;
        String cargo;
        switch (RadioGroup1->ItemIndex)
        {
                case 0: cargo = "Prof. Tit. ";
                        break;
                case 1: cargo = "Prof. Assoc. ";
                        break;
                case 2: cargo = "Prof. Adj. ";
                        break;
                case 3: cargo = "Prof. Assist. ";
                        break;
                case 4: cargo = "Prof. Aux. ";
                        break;
        }
        examinador[i].nome_completo = cargo + examinador[i].nome;
        // Atualiza a lista
        List_Banca->Items->Clear();
        for (int j=0; j<examinador.size() ; j++)
        {
                List_Banca->Items->Add(examinador[j].nome);
        }
        if (List_Banca->Items->Count > 0)
                List_Banca->ItemIndex = i;
                List_BancaClick(FormConfiguracao);
        }   */
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button4Click(TObject *Sender)
{
        List_CandidatosClick(FormConfiguracao);
        //HabilitaPanel1(0);
        //Panel1->Enabled = false;
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button1Click(TObject *Sender)
{
        Edit3->Text = "";

        RadioGroup3->ItemIndex = 0;
        DateTimePicker2->Date = (TDate)"1/1/1975";

        HabilitaPanel1(1);
        //Panel1->Enabled = true;
        candidatos_inscritos_opcao = 1;  // Adicionar

        
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::List_CandidatosClick(TObject *Sender)
{
        int i = List_Candidatos->ItemIndex;

        if (i>=0)
        {
        Edit3->Text = candidato[i].nome;
        RadioGroup3->ItemIndex = candidato[i].sexo;
        DateTimePicker2->Date = candidato[i].nascimento;
        }
        else
        {
        Edit3->Text = "";
        RadioGroup3->ItemIndex = 0;
        DateTimePicker2->Date = (TDate)"1/1/1975";
        }

        HabilitaPanel1(0);
        //Panel1->Enabled = false;
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button6Click(TObject *Sender)
{
        int i = List_Candidatos->ItemIndex;

      if (i >=0)
      {
        candidato.erase(candidato.begin() + i);

        List_Candidatos->Items->Clear();

        for (unsigned int j=0; j<candidato.size() ; j++)
        {
                List_Candidatos->Items->Add(candidato[j].nome);
        }
        if (List_Candidatos->Items->Count > 0)
        {
                List_Candidatos->ItemIndex = 0;
                List_CandidatosClick(FormConfiguracao);
        }
      }
      i = List_Candidatos->ItemIndex;
      if (i <0)
      {
        Edit3->Text = "";
        RadioGroup3->ItemIndex = 0;
        DateTimePicker2->Date = (TDate)"1/1/1975";
      }
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button7Click(TObject *Sender)
{
        if (List_Candidatos->ItemIndex>=0)
        {
          List_CandidatosClick(FormConfiguracao);
          candidatos_inscritos_opcao = 2;
          HabilitaPanel1(1);
        }
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button8Click(TObject *Sender)
{
        if (Trim(Edit4->Text) != "")
        {
        if (!DirectoryExists(Edit4->Text))
        {
                if (Application->MessageBox("Diretório não existe. Deseja criá-lo?", "Atenção", MB_OKCANCEL) == IDOK)
                {
                        if (!CreateDir(Edit4->Text))
                        {
                              throw Exception("Não foi possível criar o diretórios.");
                        }
                        else
                        {
                                diretorio_temporario = Edit4->Text;
                                if (Trim(Edit5->Text) !="")
                                        PageControl1->ActivePage = Pag3;
                                else
                                        Application->MessageBox("Escolha um nome para o projeto.", "Erro", 0);
                        }
                }
                else
                {
                        Edit4->Text = DirectoryListBox1->Directory;
                }
        }
        else
        {
                 diretorio_temporario = Edit4->Text;
                 if (Trim(Edit5->Text) !="")
                       PageControl1->ActivePage = Pag3;
                 else
                       Application->MessageBox("Escolha um nome para o projeto.", "Erro", 0);


        }
        }
        else
        {
                Application->MessageBox("Escolha um diretório para gravar os documentos gerados.", "Atenção", MB_OK);
        }
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::DirectoryListBox1Change(TObject *Sender)
{
        Edit4->Text = DirectoryListBox1->Directory;
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button10Click(TObject *Sender)
{
        if (projeto.diretorio!="")
                SetCurrentDir(projeto.diretorio);
        Close();
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button9Click(TObject *Sender)
{



        PageControl1->ActivePage = Pag2;
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button12Click(TObject *Sender)
{
        PageControl1->ActivePage = Pag1;        
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button14Click(TObject *Sender)
{
        PageControl1->ActivePage = Pag2;        
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button13Click(TObject *Sender)
{
        PageControl1->ActivePage = Pag4;
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Button16Click(TObject *Sender)
{
        PageControl1->ActivePage = Pag3;
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::FormShow(TObject *Sender)
{
        PageControl1->ActivePageIndex = 0;        
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::Pag2Show(TObject *Sender)
{
     Edit4->Text = DirectoryListBox1->Directory;
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::DirectoryListBox1Click(TObject *Sender)
{
        DirectoryListBox1->OpenCurrent();
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::HabilitaPanel1(int op)
{
        // Esta funcao habilita ou desabilita o Panel1
        // op=1 -- habilita
        // op=0 -- desabilita
        // op=outros -- nada acontece

        if (op==1)
        {
                Panel1->Color = clBtnFace;
                Edit3->Color = clWindow;
                DateTimePicker2->Color = clWindow;
                Panel1->Enabled = true;
                Button2->Visible = true;
                Button4->Visible = true;
        }

        if (op==0)
        {
                Panel1->Color = clMoneyGreen;
                Edit3->Color = clSilver;
                DateTimePicker2->Color = clSilver;
                Panel1->Enabled = false;
                Button2->Visible = false;
                Button4->Visible = false;
        }
}



void __fastcall TFormConfiguracao::Pag4Show(TObject *Sender)
{
        List_CandidatosClick(FormConfiguracao);
}
//---------------------------------------------------------------------------

void __fastcall TFormConfiguracao::DriveComboBox1Change(TObject *Sender)
{
        DirectoryListBox1->Drive = DriveComboBox1->Drive;

}
//---------------------------------------------------------------------------

